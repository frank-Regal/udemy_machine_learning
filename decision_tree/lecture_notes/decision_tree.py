# -*- coding: utf-8 -*-
"""Decision_tree_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-xCcgHP8OsbbAKQusfRxD5PvunMbQzM
"""

# Step 1:
# Import all the libraries
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 2:
# Load and read the data
d = pd.read_csv('Books.csv')  #Read csv file

# Explore the data
print(d)

# Determine the inputs of the data
x = d.drop(columns=['Books'])
print(x)

# Determine the outputs of the data
y = d['Books']
print(y)

# Step 3:
# Clean the data: Data is already clean

# Step 4:
# Split the data in train and test sets
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)

# Step 5:
# Create the Decision Tree machine model
model = DecisionTreeClassifier()

# Step 6:
# Train the model
model.fit(x_train,y_train)

# Step 7:
# Prediction of the machine model
prediction = model.predict(x_test)

# Step 8:
# Final evaluation of the machine model
score = accuracy_score(y_test,prediction)
print(score)

# Now to check the final outputs of the model
model.fit(x,y) 
prediction = model.predict([[25,1],[20,0]])
print(prediction)

######################################################################################################################################

"""**Change the test size to 80% and check the result**"""

# Step 1:
# Import all the libraries
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 2:
# Load and read the data
d = pd.read_csv('Books.csv')  #Read csv file

# Explore the data
print(d)

# Determine the inputs of the data
x = d.drop(columns=['Books'])
print(x)

# Determine the outputs of the data
y = d['Books']
print(y)

# Step 3:
# Clean the data: Data is already clean

# Step 4:
# Split the data in train and test sets
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.8)  #NOW TEST SIZE IS 80% AND TRAINING SIZE IS JUST 20%

# Step 5:
# Create the Decision Tree machine model
model = DecisionTreeClassifier()

# Step 6:
# Train the model
model.fit(x_train,y_train)

# Step 7:
# Prediction of the machine model
prediction = model.predict(x_test)

# Step 8:
# Final evaluation of the machine model
score = accuracy_score(y_test,prediction)
print(score)